/* autogenerated by Processing revision 1277 on 2022-12-28 */
import processing.core.*;
import processing.data.*;
import processing.event.*;
import processing.opengl.*;

import java.util.HashMap;
import java.util.ArrayList;
import java.io.File;
import java.io.BufferedReader;
import java.io.PrintWriter;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.IOException;

public class edge_of_solaris extends PApplet {

bullet[] blts;

 public void setup() {
  /* size commented out by preprocessor */;
  blts = new bullet[200];
  initObjects();
}

 public void draw() {
  background(0);
  processInput();
  drawUI();
}

 public void drawUI() {
  if (screenIndex == 0) {
    setRect(1);
    rect(playerX, playerY, 60, 20);
    for (bullet blts : blts) {
      blts.update();
      blts.display();
    }
  }
}

 public void setRect(int colorIndex) {
  if (colorIndex == 0) {
    fill(0);
  } else if (colorIndex == 1) {
    fill(255);
  }
}

 public void processInput() {
  if (screenIndex == 0) {
      if (keyInput[0] == true) { //w
        playerY = playerY - playerMoveY;
      }
      if (keyInput[1] == true) { //s
        playerY = playerY + playerMoveY;
      }
      if (keyInput[2] == true) { //d
        playerX = playerX + playerMoveX;
      }
      if (keyInput[3] == true) { //a
        playerX = playerX - playerMoveX;
      }
      if (keyInput[4] == true) { //space
        playerShoot();
      }
  }
}

 public void keyPressed() {
  if (key == 'w' || key == 'W')  keyInput[0] = true;
  if (key == 's' || key == 'S')  keyInput[1] = true;
  if (key == 'd' || key == 'D')  keyInput[2] = true;
  if (key == 'a' || key == 'A')  keyInput[3] = true;
  if (key == ' ') keyInput[4] = true;
}

 public void keyReleased() {
  if (key == 'w' || key == 'W')  keyInput[0] = false;
  if (key == 's' || key == 'S')  keyInput[1] = false;
  if (key == 'd' || key == 'D')  keyInput[2] = false;
  if (key == 'a' || key == 'A')  keyInput[3] = false;
  if (key == ' ') keyInput[4] = false;
}

 public void playerShoot() {
  if (playerWeapon == 0) {
    blts[playerBulletIndex] = new bullet(playerX + 55, playerY + 18, 10, 0);
    playerBulletIndex++;
    if (playerBulletIndex == 200) playerBulletIndex = 0;
  }
}

 public void initObjects() {
  for (int i = 0; i < 200; i++) {
    blts[i] = new bullet(-20, -20, 0, 0);
  }
}
class bullet {
  int bulletX;
  int bulletY;
  int bulletSpeedX;
  int bulletSpeedY;

bullet(int bulletXtemp, int bulletYtemp, int bulletSpeedXtemp, int bulletSpeedYtemp) {
  bulletX = bulletXtemp;
  bulletY = bulletYtemp;
  bulletSpeedX = bulletSpeedXtemp;
  bulletSpeedY = bulletSpeedYtemp;
}

 public void update() {
  bulletX = bulletX + bulletSpeedX;
  bulletY = bulletY + bulletSpeedY;
}

 public void display() {
  fill(255);
  ellipse(bulletX, bulletY, 5, 5);
}

}
//game vars
int screenIndex = 0;

//player vars
int playerX = 200;
int playerY = 200;
int playerMoveX = 2;
int playerMoveY = 2;
int playerWeapon = 0;
int playerBulletIndex = 0;

//input vars
boolean keyInput[] = new boolean [15];


  public void settings() { size(640, 480); }

  static public void main(String[] passedArgs) {
    String[] appletArgs = new String[] { "edge_of_solaris" };
    if (passedArgs != null) {
      PApplet.main(concat(appletArgs, passedArgs));
    } else {
      PApplet.main(appletArgs);
    }
  }
}
